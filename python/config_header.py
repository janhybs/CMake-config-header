import urllib2
import os
import sys
import subprocess
from subprocess import Popen, PIPE, STDOUT
import time
from optparse import OptionParser
import re


def parse():
    parser = OptionParser()

    parser.add_option("-f", "--file", dest="file", metavar="FILENAME", default=[],
                      help="file containing cmake definitions")
    parser.add_option("-o", "--output", dest="output", default=None, help="output file", metavar="FILE")
    parser.set_usage("""%prog [options]""")
    (options, args) = parser.parse_args()
    return (options, args)

# removing start characters like -D or -
def fixname (name):
    if name.startswith("-D") or name.startswith("/D"):
        name =  name[2:]

    elif name.startswith("-"):
        name = name[1:]

    return re.sub("[^0-9a-zA-Z_]", "_", name)

# fixing value (adding " if not number)
def fixvalue (value):
    if not value:
        return "0"
    if value.isdigit():
        return value

    return '"{0}"'.format(value)


if __name__ == '__main__':
    (options, args) = parse()

    headerinfo = """
// This is autogenerated file. Do not modify this file!
// File contains compiler flags and other definitions.
"""
    result = []
    used = {}
    handler = open(options.file, "r")
    content = handler.read().strip()
    handler.close()
    definitions =  content.split(";")
    for definition in definitions:
        pair = definition.split("=")

        if not len (pair[0]):
            continue

        if len(pair) == 1: pair.append("1")

        name = fixname(pair[0])
        value = fixvalue(pair[1])

        if not used.has_key(name):
            result.append("#define {0} {1}".format(name, value))
            used[name] = value

    # write result
    handler = open(options.output, "w")
    handler.write (headerinfo.lstrip())
    handler.write (os.linesep)
    handler.write (os.linesep.join(result))
    handler.close()

